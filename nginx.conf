
#user  nobody;
worker_processes 1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;
events {
  worker_connections 1024;
}


http {
  include mime.types;
  default_type application/octet-stream;

  #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
  #                  '$status $body_bytes_sent "$http_referer" '
  #                  '"$http_user_agent" "$http_x_forwarded_for"';

  #access_log  logs/access.log  main;
  sendfile on;
  #tcp_nopush     on;

  #keepalive_timeout  0;
  keepalive_timeout 65;

  #gzip  on;
  server {
    listen 8093;
    server_name localhost;

    #charset koi8-r;

    #access_log  logs/host.access.log  main;
    location = /index.html {
      root myTest;
      index index.html index.htm;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
      root html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}
    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
  }
    server { #线上环境使用nginx 代理
    listen 8094; #1.你想让你的这个项目跑在哪个端口
    server_name localhost; #2.当前服务器ip,一定要写本机的ip地址，而不是localhost!!

location ^~ / {
	root mySecondRefush/;
	try_files $uri $uri/ /jsui/index.html;
	}

	
  }
  server {
    listen 8091;
    server_name localhost;
    location / {	
      root html/myPro;
      index index.html;
    }
    #添加拦截路径和代理地址 	#开始配置我们的反向代理
    location /api/ {
      proxy_pass http://localhost:3001/; #注意：使用代理地址时末尾要考虑是是否需要加上斜杠"/"，加上"/"表示去掉 /api/ 这个通配符而从根路径开始。
    }
  }


  server { #开发环境使用nginx 代理
    listen 8083; #1.你想让你的这个项目跑在哪个端口
    server_name localhost; #2.当前服务器ip,一定要写本机的ip地址，而不是localhost!!
 location ^~ /api/ {
     proxy_pass http://172.32.147.251:18989; #api的转发地址  开发
     #proxy_pass http://192.168.182.248:8088; #api的转发地址 生产  
    }
	#开发环境没有使用location / {} 进行代理，是因为开发环境下，本地已经启动了一个服务器可以获得静态资源，而不需要nginx代理服务器
   
  }
  #多页面demo
      server { #线上环境使用nginx 代理
    listen 8092; #1.你想让你的这个项目跑在哪个端口
    server_name localhost; #2.当前服务器ip,一定要写本机的ip地址，而不是localhost!!

   
	location ^~ / {
	root multiplePages;
	try_files $uri $uri/ /index.html;
	}
  }
    #网站-H5版
    server { #线上环境使用nginx 代理
    listen 8095; #1.你想让你的这个项目跑在哪个端口
    server_name localhost; #2.当前服务器ip,一定要写本机的ip地址，而不是localhost!!

   
	location ^~ / {
	root H5;
	try_files $uri $uri/ /index.html;
	}
	location ^~ /jsui/api/ {
      proxy_pass http://172.32.148.75:8185/; #api的转发地址,
    }
  }
  
  #数据中心
    server { #线上环境使用nginx 代理
    listen 8086; #1.你想让你的这个项目跑在哪个端口
    server_name localhost; #2.当前服务器ip,一定要写本机的ip地址，而不是localhost!!

   
	location ^~ /jsui {
	root dataCenter;
	try_files $uri $uri/ /jsui/index.html;
	}
	location ^~ /jsui/api/ {
      proxy_pass http://172.32.148.75:8185/; #api的转发地址,
    }
  }
  
    #位置中心
    server { #线上环境使用nginx 代理
    listen 8099; #1.你想让你的这个项目跑在哪个端口
    server_name localhost; #2.当前服务器ip,一定要写本机的ip地址，而不是localhost!!

   
	location ^~ /dmpapp {
	root tianjinxinagmu;
	try_files $uri $uri/ /dmpapp/tap_web/index.html;
	}
	location ^~ /tap/api/ {
      proxy_pass http://192.168.123.115:18381/; #api的转发地址,
    }
  }
  
      #标签管理
    server { #线上环境使用nginx 代理
    listen 8199; #1.你想让你的这个项目跑在哪个端口
    server_name localhost; #2.当前服务器ip,一定要写本机的ip地址，而不是localhost!!

   
	location ^~ /baselabelui {
	root labelManage;
	try_files $uri $uri/ /baselabelui/index.html;
	}
	location ^~ /baselabelapi/ {
      proxy_pass http://172.32.148.70:18060; #api的转发地址,因为后端路径中有baselabelapi 这层，所以端口号后面不能加"/" 
    }
  }
  
   #铁塔
  server { #线上环境使用nginx 代理
    listen 8087; #1.你想让你的这个项目跑在哪个端口
    server_name localhost; #2.当前服务器ip,一定要写本机的ip地址，而不是localhost!!
 location ^~ /zenith/ {
      proxy_pass http://172.32.148.67:8088/zenith/; #api的转发地址,每个api请求的前面都是zenith开头；
    }
 
	location ^~ /tjTowerWeb {
	root zhongtian;
	try_files $uri $uri/ /tjTowerWeb/index.html;
	}
   
  }

  # another virtual host using mix of IP-, name-, and port-based configuration
  #
  #server {
  #    listen       8000;
  #    listen       somename:8080;
  #    server_name  somename  alias  another.alias;

  #    location / {
  #        root   html;
  #        index  index.html index.htm;
  #    }
  #}
  # HTTPS server
  #
  #server {
  #    listen       443 ssl;
  #    server_name  localhost;
  #    ssl_certificate      cert.pem;
  #    ssl_certificate_key  cert.key;
  #    ssl_session_cache    shared:SSL:1m;
  #    ssl_session_timeout  5m;
  #    ssl_ciphers  HIGH:!aNULL:!MD5;
  #    ssl_prefer_server_ciphers  on;
  #    location / {
  #        root   html;
  #        index  index.html index.htm;
  #    }
  #}
}
